// Code generated by protoc-gen-ext. DO NOT EDIT.
// source: github.com/xdmybl/gate-type/proto/gate/v1/gateway.proto

package v1

import (
	"bytes"
	"encoding/binary"
	"errors"
	"fmt"
	"strings"

	"github.com/solo-io/protoc-gen-ext/pkg/clone"
	"google.golang.org/protobuf/proto"

	github_com_xdmybl_gate_type_pkg_api_core_v1 "github.com/xdmybl/gate-type/pkg/api/core/v1"
)

// ensure the imports are used
var (
	_ = errors.New("")
	_ = fmt.Print
	_ = binary.LittleEndian
	_ = bytes.Compare
	_ = strings.Compare
	_ = clone.Cloner(nil)
	_ = proto.Message(nil)
)

// Clone function
func (m *GatewaySpec) Clone() proto.Message {
	var target *GatewaySpec
	if m == nil {
		return target
	}
	target = &GatewaySpec{}

	if h, ok := interface{}(m.GetCommonInfo()).(clone.Cloner); ok {
		target.CommonInfo = h.Clone().(*github_com_xdmybl_gate_type_pkg_api_core_v1.CommonInfo)
	} else {
		target.CommonInfo = proto.Clone(m.GetCommonInfo()).(*github_com_xdmybl_gate_type_pkg_api_core_v1.CommonInfo)
	}

	if m.GetListeners() != nil {
		target.Listeners = make([]*GatewayListener, len(m.GetListeners()))
		for idx, v := range m.GetListeners() {

			if h, ok := interface{}(v).(clone.Cloner); ok {
				target.Listeners[idx] = h.Clone().(*GatewayListener)
			} else {
				target.Listeners[idx] = proto.Clone(v).(*GatewayListener)
			}

		}
	}

	return target
}

// Clone function
func (m *GatewayListener) Clone() proto.Message {
	var target *GatewayListener
	if m == nil {
		return target
	}
	target = &GatewayListener{}

	target.BindAddress = m.GetBindAddress()

	target.BindPort = m.GetBindPort()

	target.BindToPort = m.GetBindToPort()

	if m.GetFilterName() != nil {
		target.FilterName = make([]string, len(m.GetFilterName()))
		for idx, v := range m.GetFilterName() {

			target.FilterName[idx] = v

		}
	}

	if h, ok := interface{}(m.GetOptions()).(clone.Cloner); ok {
		target.Options = h.Clone().(*ListenerOptions)
	} else {
		target.Options = proto.Clone(m.GetOptions()).(*ListenerOptions)
	}

	if h, ok := interface{}(m.GetMetadata()).(clone.Cloner); ok {
		target.Metadata = h.Clone().(*github_com_xdmybl_gate_type_pkg_api_core_v1.GateMetadata)
	} else {
		target.Metadata = proto.Clone(m.GetMetadata()).(*github_com_xdmybl_gate_type_pkg_api_core_v1.GateMetadata)
	}

	return target
}

// Clone function
func (m *ListenerOptions) Clone() proto.Message {
	var target *ListenerOptions
	if m == nil {
		return target
	}
	target = &ListenerOptions{}

	target.PerConnectionBufferLimitBytes = m.GetPerConnectionBufferLimitBytes()

	return target
}
