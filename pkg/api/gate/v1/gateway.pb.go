// 对应 envoy 的 listener List 到 []filter 这个层级的 对象

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.18.1
// source: github.com/xdmybl/gate-type/proto/gate/v1/gateway.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
	v11 "github.com/xdmybl/gate-type/pkg/api/common/v1"
	v1 "github.com/xdmybl/gate-type/pkg/api/core/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HttpServerOptions_UpgradeType int32

const (
	HttpServerOptions_UNKNOWN   HttpServerOptions_UpgradeType = 0
	HttpServerOptions_WEBSOCKET HttpServerOptions_UpgradeType = 1
	HttpServerOptions_CONNECT   HttpServerOptions_UpgradeType = 2
)

// Enum value maps for HttpServerOptions_UpgradeType.
var (
	HttpServerOptions_UpgradeType_name = map[int32]string{
		0: "UNKNOWN",
		1: "WEBSOCKET",
		2: "CONNECT",
	}
	HttpServerOptions_UpgradeType_value = map[string]int32{
		"UNKNOWN":   0,
		"WEBSOCKET": 1,
		"CONNECT":   2,
	}
)

func (x HttpServerOptions_UpgradeType) Enum() *HttpServerOptions_UpgradeType {
	p := new(HttpServerOptions_UpgradeType)
	*p = x
	return p
}

func (x HttpServerOptions_UpgradeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HttpServerOptions_UpgradeType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_enumTypes[0].Descriptor()
}

func (HttpServerOptions_UpgradeType) Type() protoreflect.EnumType {
	return &file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_enumTypes[0]
}

func (x HttpServerOptions_UpgradeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HttpServerOptions_UpgradeType.Descriptor instead.
func (HttpServerOptions_UpgradeType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_rawDescGZIP(), []int{6, 0}
}

type GatewaySpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonInfo *v1.CommonInfo `protobuf:"bytes,1,opt,name=commonInfo,proto3" json:"commonInfo,omitempty"`
	// 说明：repeated GwListener listeners = 4; 同样会生成校验逻辑代码。
	Listeners []*GwListener `protobuf:"bytes,4,rep,name=listeners,proto3" json:"listeners,omitempty"`
	// 描述：Node Group Name字符串数组
	// 校验1：数组不可为空，字符串不可重复，字符串由ASCII码组成，正则表达式（"^[!-~]{1,64}$"）
	// 校验2：数组不可为空，字符串不可重复，正则表达式（"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"）
	NgNames []string `protobuf:"bytes,5,rep,name=ng_names,json=ngNames,proto3" json:"ng_names,omitempty"`
}

func (x *GatewaySpec) Reset() {
	*x = GatewaySpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewaySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewaySpec) ProtoMessage() {}

func (x *GatewaySpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewaySpec.ProtoReflect.Descriptor instead.
func (*GatewaySpec) Descriptor() ([]byte, []int) {
	return file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *GatewaySpec) GetCommonInfo() *v1.CommonInfo {
	if x != nil {
		return x.CommonInfo
	}
	return nil
}

func (x *GatewaySpec) GetListeners() []*GwListener {
	if x != nil {
		return x.Listeners
	}
	return nil
}

func (x *GatewaySpec) GetNgNames() []string {
	if x != nil {
		return x.NgNames
	}
	return nil
}

// TCP Server当前版本不支持
type GwTcpServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GwTcpServer) Reset() {
	*x = GwTcpServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GwTcpServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GwTcpServer) ProtoMessage() {}

func (x *GwTcpServer) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GwTcpServer.ProtoReflect.Descriptor instead.
func (*GwTcpServer) Descriptor() ([]byte, []int) {
	return file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_rawDescGZIP(), []int{1}
}

type GwHttpServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options *HttpServerOptions `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	// 描述：VirtualServices的名称
	// 校验：与 kubernetes ApiServer 允许的Name正则表达式（"[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"）一致。
	VirtualServices []string `protobuf:"bytes,2,rep,name=virtual_services,json=virtualServices,proto3" json:"virtual_services,omitempty"`
	// 访问日志服务集群
	AccessLogUpstreamName string `protobuf:"bytes,3,opt,name=access_log_upstream_name,json=accessLogUpstreamName,proto3" json:"access_log_upstream_name,omitempty"`
	// 哪个用户配置了访问日志服务
	AccessLogAccount string `protobuf:"bytes,4,opt,name=access_log_account,json=accessLogAccount,proto3" json:"access_log_account,omitempty"`
	// 调用链跟踪服务集群
	TracingUpstreamName string `protobuf:"bytes,5,opt,name=tracing_upstream_name,json=tracingUpstreamName,proto3" json:"tracing_upstream_name,omitempty"`
}

func (x *GwHttpServer) Reset() {
	*x = GwHttpServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GwHttpServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GwHttpServer) ProtoMessage() {}

func (x *GwHttpServer) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GwHttpServer.ProtoReflect.Descriptor instead.
func (*GwHttpServer) Descriptor() ([]byte, []int) {
	return file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_rawDescGZIP(), []int{2}
}

func (x *GwHttpServer) GetOptions() *HttpServerOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *GwHttpServer) GetVirtualServices() []string {
	if x != nil {
		return x.VirtualServices
	}
	return nil
}

func (x *GwHttpServer) GetAccessLogUpstreamName() string {
	if x != nil {
		return x.AccessLogUpstreamName
	}
	return ""
}

func (x *GwHttpServer) GetAccessLogAccount() string {
	if x != nil {
		return x.AccessLogAccount
	}
	return ""
}

func (x *GwHttpServer) GetTracingUpstreamName() string {
	if x != nil {
		return x.TracingUpstreamName
	}
	return ""
}

type GwServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 描述：服务端SSL配置
	// 必选：否
	SslConfigurations *v11.TlsServer `protobuf:"bytes,1,opt,name=ssl_configurations,json=sslConfigurations,proto3" json:"ssl_configurations,omitempty"`
	// 校验：服务类型必须二先一
	//
	// Types that are assignable to ServerType:
	//
	//	*GwServer_HttpServer
	//	*GwServer_TcpServer
	ServerType isGwServer_ServerType `protobuf_oneof:"server_type"`
}

func (x *GwServer) Reset() {
	*x = GwServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GwServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GwServer) ProtoMessage() {}

func (x *GwServer) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GwServer.ProtoReflect.Descriptor instead.
func (*GwServer) Descriptor() ([]byte, []int) {
	return file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_rawDescGZIP(), []int{3}
}

func (x *GwServer) GetSslConfigurations() *v11.TlsServer {
	if x != nil {
		return x.SslConfigurations
	}
	return nil
}

func (m *GwServer) GetServerType() isGwServer_ServerType {
	if m != nil {
		return m.ServerType
	}
	return nil
}

func (x *GwServer) GetHttpServer() *GwHttpServer {
	if x, ok := x.GetServerType().(*GwServer_HttpServer); ok {
		return x.HttpServer
	}
	return nil
}

func (x *GwServer) GetTcpServer() *GwTcpServer {
	if x, ok := x.GetServerType().(*GwServer_TcpServer); ok {
		return x.TcpServer
	}
	return nil
}

type isGwServer_ServerType interface {
	isGwServer_ServerType()
}

type GwServer_HttpServer struct {
	HttpServer *GwHttpServer `protobuf:"bytes,3,opt,name=http_server,json=httpServer,proto3,oneof"`
}

type GwServer_TcpServer struct {
	TcpServer *GwTcpServer `protobuf:"bytes,4,opt,name=tcp_server,json=tcpServer,proto3,oneof"`
}

func (*GwServer_HttpServer) isGwServer_ServerType() {}

func (*GwServer_TcpServer) isGwServer_ServerType() {}

type GwListener struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 校验：满足IPv4，IPv6格式，当前版本默认常量字符串0.0.0.0
	BindAddress string `protobuf:"bytes,2,opt,name=bind_address,json=bindAddress,proto3" json:"bind_address,omitempty"` //string bind_address = 2 [(validate.rules).string.const = "0.0.0.0"];
	// 校验：满足动态端口范围 [1, 65535]
	BindPort uint32 `protobuf:"varint,3,opt,name=bind_port,json=bindPort,proto3" json:"bind_port,omitempty"`
	// 描述：是否绑定到OS级端口上
	// 校验：默认为 false
	BindToPort bool `protobuf:"varint,4,opt,name=bind_to_port,json=bindToPort,proto3" json:"bind_to_port,omitempty"`
	// 说明：repeated GwServer srvs = 5; 同样会生成message item的校验逻辑代码。
	Server []*GwServer `protobuf:"bytes,5,rep,name=server,proto3" json:"server,omitempty"`
	// 说明：字段为【选项】，代表可选。不过可以通过 [(validate.rules).message.required = true] 设置为必选。
	Options *ListenerOptions `protobuf:"bytes,8,opt,name=options,proto3" json:"options,omitempty"`
	// Metadata for the individual listener
	// This data is opaque to Dam, used
	// by controllers to track ownership of listeners within a proxy
	// as they are typically generated by a controller (such as the gateway)
	Metadata *_struct.Struct `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *GwListener) Reset() {
	*x = GwListener{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GwListener) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GwListener) ProtoMessage() {}

func (x *GwListener) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GwListener.ProtoReflect.Descriptor instead.
func (*GwListener) Descriptor() ([]byte, []int) {
	return file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_rawDescGZIP(), []int{4}
}

func (x *GwListener) GetBindAddress() string {
	if x != nil {
		return x.BindAddress
	}
	return ""
}

func (x *GwListener) GetBindPort() uint32 {
	if x != nil {
		return x.BindPort
	}
	return 0
}

func (x *GwListener) GetBindToPort() bool {
	if x != nil {
		return x.BindToPort
	}
	return false
}

func (x *GwListener) GetServer() []*GwServer {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *GwListener) GetOptions() *ListenerOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *GwListener) GetMetadata() *_struct.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ListenerOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Soft limit on size of the listener's new connection read and write buffers. If unspecified, defaults to 1MiB
	// For more info, check out the [Envoy docs](https://www.envoyproxy.io/docs/envoy/v1.14.1/api-v2/api/v2/listener.proto)
	PerConnectionBufferLimitBytes uint32 `protobuf:"varint,1,opt,name=perConnectionBufferLimitBytes,proto3" json:"perConnectionBufferLimitBytes,omitempty"`
}

func (x *ListenerOptions) Reset() {
	*x = ListenerOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenerOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenerOptions) ProtoMessage() {}

func (x *ListenerOptions) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenerOptions.ProtoReflect.Descriptor instead.
func (*ListenerOptions) Descriptor() ([]byte, []int) {
	return file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_rawDescGZIP(), []int{5}
}

func (x *ListenerOptions) GetPerConnectionBufferLimitBytes() uint32 {
	if x != nil {
		return x.PerConnectionBufferLimitBytes
	}
	return 0
}

type HttpServerOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MergeSlashes  bool                          `protobuf:"varint,1,opt,name=mergeSlashes,proto3" json:"mergeSlashes,omitempty"`
	SkipXffAppend bool                          `protobuf:"varint,2,opt,name=skipXffAppend,proto3" json:"skipXffAppend,omitempty"`
	UpgradeType   HttpServerOptions_UpgradeType `protobuf:"varint,3,opt,name=upgradeType,proto3,enum=gate.HttpServerOptions_UpgradeType" json:"upgradeType,omitempty"`
}

func (x *HttpServerOptions) Reset() {
	*x = HttpServerOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpServerOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpServerOptions) ProtoMessage() {}

func (x *HttpServerOptions) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpServerOptions.ProtoReflect.Descriptor instead.
func (*HttpServerOptions) Descriptor() ([]byte, []int) {
	return file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_rawDescGZIP(), []int{6}
}

func (x *HttpServerOptions) GetMergeSlashes() bool {
	if x != nil {
		return x.MergeSlashes
	}
	return false
}

func (x *HttpServerOptions) GetSkipXffAppend() bool {
	if x != nil {
		return x.SkipXffAppend
	}
	return false
}

func (x *HttpServerOptions) GetUpgradeType() HttpServerOptions_UpgradeType {
	if x != nil {
		return x.UpgradeType
	}
	return HttpServerOptions_UNKNOWN
}

var File_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto protoreflect.FileDescriptor

var file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_rawDesc = []byte{
	0x0a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x64, 0x6d,
	0x79, 0x62, 0x6c, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x61, 0x74, 0x65, 0x1a,
	0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x65, 0x78, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xf7, 0x01, 0x0a, 0x0b, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x33, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x2e,
	0x47, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x42, 0x11, 0xfa, 0x42, 0x0e, 0x92,
	0x01, 0x0b, 0x08, 0x01, 0x10, 0x10, 0x22, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x70, 0x0a, 0x08, 0x6e, 0x67, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x42, 0x55, 0xfa, 0x42, 0x52, 0x92,
	0x01, 0x4f, 0x08, 0x01, 0x10, 0x40, 0x18, 0x01, 0x22, 0x47, 0x72, 0x45, 0x18, 0x3f, 0x32, 0x41,
	0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x28, 0x5b, 0x2d, 0x61, 0x2d, 0x7a, 0x30,
	0x2d, 0x39, 0x5d, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x3f, 0x28, 0x5c,
	0x2e, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x28, 0x5b, 0x2d, 0x61, 0x2d, 0x7a, 0x30,
	0x2d, 0x39, 0x5d, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x3f, 0x29, 0x2a,
	0x24, 0x52, 0x07, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x0d, 0x0a, 0x0b, 0x47, 0x77,
	0x54, 0x63, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x8b, 0x04, 0x0a, 0x0c, 0x47, 0x77,
	0x48, 0x74, 0x74, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x80, 0x01,
	0x0a, 0x10, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x55, 0xfa, 0x42, 0x52, 0x92, 0x01, 0x4f,
	0x08, 0x01, 0x10, 0x08, 0x18, 0x01, 0x22, 0x47, 0x72, 0x45, 0x18, 0x3f, 0x32, 0x41, 0x5e, 0x5b,
	0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x28, 0x5b, 0x2d, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39,
	0x5d, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x3f, 0x28, 0x5c, 0x2e, 0x5b,
	0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x28, 0x5b, 0x2d, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39,
	0x5d, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x3f, 0x29, 0x2a, 0x24, 0x52,
	0x0f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x12, 0x86, 0x01, 0x0a, 0x18, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x5f,
	0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x4d, 0xfa, 0x42, 0x4a, 0x72, 0x48, 0x18, 0x3f, 0x32, 0x41, 0x5e, 0x5b,
	0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x28, 0x5b, 0x2d, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39,
	0x5d, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x3f, 0x28, 0x5c, 0x2e, 0x5b,
	0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x28, 0x5b, 0x2d, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39,
	0x5d, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x3f, 0x29, 0x2a, 0x24, 0xd0,
	0x01, 0x01, 0x52, 0x15, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x55, 0x70, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x12, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x18, 0x3f, 0xd0, 0x01,
	0x01, 0x52, 0x10, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x81, 0x01, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x5f,
	0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x4d, 0xfa, 0x42, 0x4a, 0x72, 0x48, 0x18, 0x3f, 0x32, 0x41, 0x5e, 0x5b,
	0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x28, 0x5b, 0x2d, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39,
	0x5d, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x3f, 0x28, 0x5c, 0x2e, 0x5b,
	0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x28, 0x5b, 0x2d, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39,
	0x5d, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x3f, 0x29, 0x2a, 0x24, 0xd0,
	0x01, 0x01, 0x52, 0x13, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x08, 0x47, 0x77, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x12, 0x73, 0x73, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6c, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x11, 0x73, 0x73, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x35, 0x0a, 0x0b, 0x68, 0x74, 0x74,
	0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x47, 0x77, 0x48, 0x74, 0x74, 0x70, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x68, 0x74, 0x74, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x32, 0x0a, 0x0a, 0x74, 0x63, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x47, 0x77, 0x54, 0x63,
	0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x74, 0x63, 0x70, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x42, 0x12, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0xab, 0x02, 0x0a, 0x0a, 0x47, 0x77, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x0c, 0x62, 0x69, 0x6e, 0x64, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x70, 0x01, 0x52, 0x0b, 0x62, 0x69, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x09, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x2a, 0x06, 0x18, 0xff, 0xff,
	0x03, 0x28, 0x01, 0x52, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a,
	0x0c, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x62, 0x69, 0x6e, 0x64, 0x54, 0x6f, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x39, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x47, 0x77, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x42,
	0x11, 0xfa, 0x42, 0x0e, 0x92, 0x01, 0x0b, 0x08, 0x01, 0x10, 0x08, 0x22, 0x05, 0x8a, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x04, 0xb8, 0xf5, 0x04, 0x01, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x65, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x52, 0x0a, 0x1d, 0x70, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x0c, 0xfa, 0x42, 0x09, 0x2a, 0x07, 0x18, 0x80, 0x04, 0x28, 0x01, 0x40, 0x01, 0x52, 0x1d,
	0x70, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0xe6, 0x01,
	0x0a, 0x11, 0x48, 0x74, 0x74, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x6c, 0x61, 0x73,
	0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x67, 0x65,
	0x53, 0x6c, 0x61, 0x73, 0x68, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x6b, 0x69, 0x70, 0x58,
	0x66, 0x66, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x73, 0x6b, 0x69, 0x70, 0x58, 0x66, 0x66, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x4f, 0x0a,
	0x0b, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x23, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x0b, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x36,
	0x0a, 0x0b, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x45,
	0x42, 0x53, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4e,
	0x4e, 0x45, 0x43, 0x54, 0x10, 0x02, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x64, 0x6d, 0x79, 0x62, 0x6c, 0x2f, 0x67, 0x61, 0x74, 0x65,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_rawDescOnce sync.Once
	file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_rawDescData = file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_rawDesc
)

func file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_rawDescGZIP() []byte {
	file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_rawDescOnce.Do(func() {
		file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_rawDescData)
	})
	return file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_rawDescData
}

var file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_goTypes = []interface{}{
	(HttpServerOptions_UpgradeType)(0), // 0: gate.HttpServerOptions.UpgradeType
	(*GatewaySpec)(nil),                // 1: gate.GatewaySpec
	(*GwTcpServer)(nil),                // 2: gate.GwTcpServer
	(*GwHttpServer)(nil),               // 3: gate.GwHttpServer
	(*GwServer)(nil),                   // 4: gate.GwServer
	(*GwListener)(nil),                 // 5: gate.GwListener
	(*ListenerOptions)(nil),            // 6: gate.ListenerOptions
	(*HttpServerOptions)(nil),          // 7: gate.HttpServerOptions
	(*v1.CommonInfo)(nil),              // 8: core.v1.CommonInfo
	(*v11.TlsServer)(nil),              // 9: common.v1.TlsServer
	(*_struct.Struct)(nil),             // 10: google.protobuf.Struct
}
var file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_depIdxs = []int32{
	8,  // 0: gate.GatewaySpec.commonInfo:type_name -> core.v1.CommonInfo
	5,  // 1: gate.GatewaySpec.listeners:type_name -> gate.GwListener
	7,  // 2: gate.GwHttpServer.options:type_name -> gate.HttpServerOptions
	9,  // 3: gate.GwServer.ssl_configurations:type_name -> common.v1.TlsServer
	3,  // 4: gate.GwServer.http_server:type_name -> gate.GwHttpServer
	2,  // 5: gate.GwServer.tcp_server:type_name -> gate.GwTcpServer
	4,  // 6: gate.GwListener.server:type_name -> gate.GwServer
	6,  // 7: gate.GwListener.options:type_name -> gate.ListenerOptions
	10, // 8: gate.GwListener.metadata:type_name -> google.protobuf.Struct
	0,  // 9: gate.HttpServerOptions.upgradeType:type_name -> gate.HttpServerOptions.UpgradeType
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_init() }
func file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_init() {
	if File_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewaySpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GwTcpServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GwHttpServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GwServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GwListener); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenerOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpServerOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*GwServer_HttpServer)(nil),
		(*GwServer_TcpServer)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_goTypes,
		DependencyIndexes: file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_depIdxs,
		EnumInfos:         file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_enumTypes,
		MessageInfos:      file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_msgTypes,
	}.Build()
	File_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto = out.File
	file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_rawDesc = nil
	file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_goTypes = nil
	file_github_com_xdmybl_gate_type_proto_gate_v1_gateway_proto_depIdxs = nil
}
