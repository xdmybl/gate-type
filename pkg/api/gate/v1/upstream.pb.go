// 对应 cds 这一层一层

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.18.1
// source: github.com/xdmybl/gate-type/proto/gate/v1/upstream.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
	v11 "github.com/xdmybl/gate-type/pkg/api/common/v1"
	v1 "github.com/xdmybl/gate-type/pkg/api/core/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpstreamSpec_LbPolicy int32

const (
	// Refer to the :ref:`round robin load balancing
	// policy<arch_overview_load_balancing_types_round_robin>`
	// for an explanation.
	UpstreamSpec_ROUND_ROBIN UpstreamSpec_LbPolicy = 0
	// Refer to the :ref:`least request load balancing
	// policy<arch_overview_load_balancing_types_least_request>`
	// for an explanation.
	UpstreamSpec_LEAST_REQUEST UpstreamSpec_LbPolicy = 1
	// Refer to the :ref:`ring hash load balancing
	// policy<arch_overview_load_balancing_types_ring_hash>`
	// for an explanation.
	UpstreamSpec_RING_HASH UpstreamSpec_LbPolicy = 2
	// Refer to the :ref:`random load balancing
	// policy<arch_overview_load_balancing_types_random>`
	// for an explanation.
	UpstreamSpec_RANDOM UpstreamSpec_LbPolicy = 3
	// Refer to the :ref:`Maglev load balancing policy<arch_overview_load_balancing_types_maglev>`
	// for an explanation.
	UpstreamSpec_MAGLEV UpstreamSpec_LbPolicy = 5
)

// Enum value maps for UpstreamSpec_LbPolicy.
var (
	UpstreamSpec_LbPolicy_name = map[int32]string{
		0: "ROUND_ROBIN",
		1: "LEAST_REQUEST",
		2: "RING_HASH",
		3: "RANDOM",
		5: "MAGLEV",
	}
	UpstreamSpec_LbPolicy_value = map[string]int32{
		"ROUND_ROBIN":   0,
		"LEAST_REQUEST": 1,
		"RING_HASH":     2,
		"RANDOM":        3,
		"MAGLEV":        5,
	}
)

func (x UpstreamSpec_LbPolicy) Enum() *UpstreamSpec_LbPolicy {
	p := new(UpstreamSpec_LbPolicy)
	*p = x
	return p
}

func (x UpstreamSpec_LbPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpstreamSpec_LbPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_enumTypes[0].Descriptor()
}

func (UpstreamSpec_LbPolicy) Type() protoreflect.EnumType {
	return &file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_enumTypes[0]
}

func (x UpstreamSpec_LbPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpstreamSpec_LbPolicy.Descriptor instead.
func (UpstreamSpec_LbPolicy) EnumDescriptor() ([]byte, []int) {
	return file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_rawDescGZIP(), []int{0, 0}
}

type UpstreamSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonInfo        *v1.CommonInfo        `protobuf:"bytes,1,opt,name=commonInfo,proto3" json:"commonInfo,omitempty"`
	LbAlg             UpstreamSpec_LbPolicy `protobuf:"varint,2,opt,name=lbAlg,proto3,enum=gate.UpstreamSpec_LbPolicy" json:"lbAlg,omitempty"`
	SslConfigurations *v11.TlsClient        `protobuf:"bytes,3,opt,name=sslConfigurations,proto3" json:"sslConfigurations,omitempty"`
	ConnPoll          *ConnPoll             `protobuf:"bytes,4,opt,name=connPoll,proto3" json:"connPoll,omitempty"`
	HealthCheckRef    *v1.ResourceRef       `protobuf:"bytes,5,opt,name=healthCheckRef,proto3" json:"healthCheckRef,omitempty"`
	StatefulSession   *v1.StatefulSession   `protobuf:"bytes,6,opt,name=statefulSession,proto3" json:"statefulSession,omitempty"`
	Endpoints         []*v1.Endpoint        `protobuf:"bytes,7,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
}

func (x *UpstreamSpec) Reset() {
	*x = UpstreamSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpstreamSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamSpec) ProtoMessage() {}

func (x *UpstreamSpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamSpec.ProtoReflect.Descriptor instead.
func (*UpstreamSpec) Descriptor() ([]byte, []int) {
	return file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_rawDescGZIP(), []int{0}
}

func (x *UpstreamSpec) GetCommonInfo() *v1.CommonInfo {
	if x != nil {
		return x.CommonInfo
	}
	return nil
}

func (x *UpstreamSpec) GetLbAlg() UpstreamSpec_LbPolicy {
	if x != nil {
		return x.LbAlg
	}
	return UpstreamSpec_ROUND_ROBIN
}

func (x *UpstreamSpec) GetSslConfigurations() *v11.TlsClient {
	if x != nil {
		return x.SslConfigurations
	}
	return nil
}

func (x *UpstreamSpec) GetConnPoll() *ConnPoll {
	if x != nil {
		return x.ConnPoll
	}
	return nil
}

func (x *UpstreamSpec) GetHealthCheckRef() *v1.ResourceRef {
	if x != nil {
		return x.HealthCheckRef
	}
	return nil
}

func (x *UpstreamSpec) GetStatefulSession() *v1.StatefulSession {
	if x != nil {
		return x.StatefulSession
	}
	return nil
}

func (x *UpstreamSpec) GetEndpoints() []*v1.Endpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

type ConnPoll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 限制每个连接可以承载的连接个数，0表示不受限制，1表示一个连接服务一个请求后就被关闭，
	// 也就是禁用连接复用。默认值为0。
	MaxRequestsPerConnection uint32 `protobuf:"varint,1,opt,name=maxRequestsPerConnection,proto3" json:"maxRequestsPerConnection,omitempty"`
	// 访问该集群的最大发连接数，默认值-1 (2^32-1 = 4294967295)。
	MaxConnections int64 `protobuf:"varint,2,opt,name=maxConnections,proto3" json:"maxConnections,omitempty"`
	// 访问该集群的最大并发请求数，默认值-1(2^32-1)。
	MaxRequests int64 `protobuf:"varint,3,opt,name=maxRequests,proto3" json:"maxRequests,omitempty"`
	// 最大阻塞的请求数，默认值-1(2^32-1)。
	MaxPendingRequests int64 `protobuf:"varint,4,opt,name=maxPendingRequests,proto3" json:"maxPendingRequests,omitempty"`
	// 指定出口网卡, 通过IP来指定网卡
	OutboundSourceAddress string `protobuf:"bytes,6,opt,name=outboundSourceAddress,proto3" json:"outboundSourceAddress,omitempty"`
}

func (x *ConnPoll) Reset() {
	*x = ConnPoll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnPoll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnPoll) ProtoMessage() {}

func (x *ConnPoll) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnPoll.ProtoReflect.Descriptor instead.
func (*ConnPoll) Descriptor() ([]byte, []int) {
	return file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_rawDescGZIP(), []int{1}
}

func (x *ConnPoll) GetMaxRequestsPerConnection() uint32 {
	if x != nil {
		return x.MaxRequestsPerConnection
	}
	return 0
}

func (x *ConnPoll) GetMaxConnections() int64 {
	if x != nil {
		return x.MaxConnections
	}
	return 0
}

func (x *ConnPoll) GetMaxRequests() int64 {
	if x != nil {
		return x.MaxRequests
	}
	return 0
}

func (x *ConnPoll) GetMaxPendingRequests() int64 {
	if x != nil {
		return x.MaxPendingRequests
	}
	return 0
}

func (x *ConnPoll) GetOutboundSourceAddress() string {
	if x != nil {
		return x.OutboundSourceAddress
	}
	return ""
}

type WeightedUpstreamList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weight             uint32                 `protobuf:"varint,1,opt,name=weight,proto3" json:"weight,omitempty"`
	UpstreamRef        *v1.ResourceRef        `protobuf:"bytes,2,opt,name=upstreamRef,proto3" json:"upstreamRef,omitempty"`
	HeaderManipulation *v1.HeaderManipulation `protobuf:"bytes,3,opt,name=headerManipulation,proto3" json:"headerManipulation,omitempty"`
}

func (x *WeightedUpstreamList) Reset() {
	*x = WeightedUpstreamList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeightedUpstreamList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeightedUpstreamList) ProtoMessage() {}

func (x *WeightedUpstreamList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeightedUpstreamList.ProtoReflect.Descriptor instead.
func (*WeightedUpstreamList) Descriptor() ([]byte, []int) {
	return file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_rawDescGZIP(), []int{2}
}

func (x *WeightedUpstreamList) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *WeightedUpstreamList) GetUpstreamRef() *v1.ResourceRef {
	if x != nil {
		return x.UpstreamRef
	}
	return nil
}

func (x *WeightedUpstreamList) GetHeaderManipulation() *v1.HeaderManipulation {
	if x != nil {
		return x.HeaderManipulation
	}
	return nil
}

var File_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto protoreflect.FileDescriptor

var file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_rawDesc = []byte{
	0x0a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x64, 0x6d,
	0x79, 0x62, 0x6c, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x61, 0x74, 0x65,
	0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76,
	0x31, 0x2f, 0x74, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x65, 0x78, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x8c, 0x04, 0x0a, 0x0c, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x33, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x05, 0x6c, 0x62, 0x41, 0x6c, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x55, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x4c, 0x62, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x05, 0x6c, 0x62, 0x41,
	0x6c, 0x67, 0x12, 0x42, 0x0a, 0x11, 0x73, 0x73, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6c, 0x73, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x11, 0x73, 0x73, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x6e, 0x50, 0x6f,
	0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x6e, 0x50, 0x6f,
	0x6c, 0x6c, 0x12, 0x3c, 0x0a, 0x0e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66,
	0x52, 0x0e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x66,
	0x12, 0x42, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92,
	0x01, 0x04, 0x08, 0x01, 0x10, 0x40, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x22, 0x5b, 0x0a, 0x08, 0x4c, 0x62, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x0f, 0x0a,
	0x0b, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x52, 0x4f, 0x42, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x4c, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x48, 0x41, 0x53, 0x48, 0x10, 0x02,
	0x12, 0x0a, 0x0a, 0x06, 0x52, 0x41, 0x4e, 0x44, 0x4f, 0x4d, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06,
	0x4d, 0x41, 0x47, 0x4c, 0x45, 0x56, 0x10, 0x05, 0x22, 0x04, 0x08, 0x04, 0x10, 0x04, 0x22, 0xca,
	0x02, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x6e, 0x50, 0x6f, 0x6c, 0x6c, 0x12, 0x3a, 0x0a, 0x18, 0x6d,
	0x61, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x50, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x6d,
	0x61, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x50, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x16, 0xfa, 0x42, 0x13, 0x22, 0x11, 0x10, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x28, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x16, 0xfa, 0x42,
	0x13, 0x22, 0x11, 0x10, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0x01, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x12, 0x46, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x16, 0xfa,
	0x42, 0x13, 0x22, 0x11, 0x10, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0x01, 0x52, 0x12, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x40, 0x0a, 0x15, 0x6f, 0x75, 0x74,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x70,
	0x01, 0xd0, 0x01, 0x01, 0x52, 0x15, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xc6, 0x01, 0x0a, 0x14,
	0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x65, 0x64, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x01, 0x52, 0x06, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66,
	0x52, 0x0b, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x66, 0x12, 0x55, 0x0a,
	0x12, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x69, 0x70, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x12, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x39, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x78, 0x64, 0x6d, 0x79, 0x62, 0x6c, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x31, 0xc0, 0xf5, 0x04, 0x01, 0xb8, 0xf5, 0x04, 0x01, 0xd0, 0xf5, 0x04, 0x01, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_rawDescOnce sync.Once
	file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_rawDescData = file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_rawDesc
)

func file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_rawDescGZIP() []byte {
	file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_rawDescOnce.Do(func() {
		file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_rawDescData)
	})
	return file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_rawDescData
}

var file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_goTypes = []interface{}{
	(UpstreamSpec_LbPolicy)(0),    // 0: gate.UpstreamSpec.LbPolicy
	(*UpstreamSpec)(nil),          // 1: gate.UpstreamSpec
	(*ConnPoll)(nil),              // 2: gate.ConnPoll
	(*WeightedUpstreamList)(nil),  // 3: gate.WeightedUpstreamList
	(*v1.CommonInfo)(nil),         // 4: core.v1.CommonInfo
	(*v11.TlsClient)(nil),         // 5: common.v1.TlsClient
	(*v1.ResourceRef)(nil),        // 6: core.v1.ResourceRef
	(*v1.StatefulSession)(nil),    // 7: core.v1.StatefulSession
	(*v1.Endpoint)(nil),           // 8: core.v1.Endpoint
	(*v1.HeaderManipulation)(nil), // 9: core.v1.HeaderManipulation
}
var file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_depIdxs = []int32{
	4, // 0: gate.UpstreamSpec.commonInfo:type_name -> core.v1.CommonInfo
	0, // 1: gate.UpstreamSpec.lbAlg:type_name -> gate.UpstreamSpec.LbPolicy
	5, // 2: gate.UpstreamSpec.sslConfigurations:type_name -> common.v1.TlsClient
	2, // 3: gate.UpstreamSpec.connPoll:type_name -> gate.ConnPoll
	6, // 4: gate.UpstreamSpec.healthCheckRef:type_name -> core.v1.ResourceRef
	7, // 5: gate.UpstreamSpec.statefulSession:type_name -> core.v1.StatefulSession
	8, // 6: gate.UpstreamSpec.endpoints:type_name -> core.v1.Endpoint
	6, // 7: gate.WeightedUpstreamList.upstreamRef:type_name -> core.v1.ResourceRef
	9, // 8: gate.WeightedUpstreamList.headerManipulation:type_name -> core.v1.HeaderManipulation
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_init() }
func file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_init() {
	if File_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpstreamSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnPoll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeightedUpstreamList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_goTypes,
		DependencyIndexes: file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_depIdxs,
		EnumInfos:         file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_enumTypes,
		MessageInfos:      file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_msgTypes,
	}.Build()
	File_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto = out.File
	file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_rawDesc = nil
	file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_goTypes = nil
	file_github_com_xdmybl_gate_type_proto_gate_v1_upstream_proto_depIdxs = nil
}
