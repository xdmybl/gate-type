syntax = "proto3";

package common.v1;

option go_package = "github.com/xdmybl/gate-type/pkg/api/common/v1";

import "validate/validate.proto";

// General TLS parameters. See the [envoy docs](https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/auth/cert.proto#envoy-api-enum-auth-tlsparameters-tlsprotocol)
// for more information on the meaning of these values.
// nochange
message TlsParameters {
    enum ProtocolVersion {
        // Envoy will choose the optimal TLS version.
        TLS_AUTO = 0;
        // TLS 1.0
        TLSv1_0 = 1;
        // TLS 1.1
        TLSv1_1 = 2;
        // TLS 1.2
        TLSv1_2 = 3;
        // TLS 1.3
        TLSv1_3 = 4;
    }

    ProtocolVersion minimumProtocolVersion = 1 [(validate.rules).enum.defined_only = true];

    ProtocolVersion maximumProtocolVersion = 2 [(validate.rules).enum.defined_only = true];

    repeated string cipherSuites = 3 [
        (validate.rules).repeated = {
            ignore_empty: true,
            unique: true,
            items: {
                string: {
                    in: ["[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]","[ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]","ECDHE-ECDSA-AES128-SHA","ECDHE-RSA-AES128-SHA","AES128-GCM-SHA256","AES128-SHA","ECDHE-ECDSA-AES256-GCM-SHA384","ECDHE-RSA-AES256-GCM-SHA384","ECDHE-ECDSA-AES256-SHA","ECDHE-RSA-AES256-SHA","AES256-GCM-SHA384","AES256-SHA"]
                }
            }
        }
    ];

    repeated string ecdhCurves = 4 [
        (validate.rules).repeated = {
            ignore_empty: true,
            unique: true,
            items: {
                string: {
                    in: ["X25519","P-256"]
                }
            }
        }
    ];
}
