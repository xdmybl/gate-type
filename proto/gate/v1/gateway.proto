// 对应 envoy 的 listener List 到 []filter 这个层级的 对象

syntax = "proto3";
package gate;

option go_package = "github.com/xdmybl/gate-type/pkg/api/gate/v1";

import "validate/validate.proto";
import "google/protobuf/struct.proto";
import "extproto/ext.proto";

import "proto/core/v1/gate.proto";
import "proto/common/v1/tls.proto";

option (extproto.equal_all) = true;
option (extproto.hash_all) = true;
option (extproto.clone_all) = true;

message GatewaySpec {
  core.v1.CommonInfo commonInfo = 1;
  // validate: max and min item.
  repeated GatewayListener listeners = 2 [
    (validate.rules).repeated = {min_items: 1, max_items: 16, items: {message: {required: true}}}
  ];
}

message GatewayListener {
  // validate: ipv4 or ipv6, default 0.0.0.0
  string bind_address = 2 [(validate.rules).string.ip = true];
  // validate: port value
  uint32 bind_port = 3 [
    (validate.rules).uint32 = {
      gte: 1,
      lte: 65535
    }
  ];
  // is bind to os port , default false
  bool bind_to_port = 4;

  repeated string filter_name = 5 [
    (validate.rules).repeated = {
      min_items: 1,
      max_items: 8,
      items: {
        message: {
          required: true
        }
      }
    }
  ];
  // listener option
  ListenerOptions options = 8;

  core.v1.GateMetadata metadata = 9 [(extproto.skip_hashing) = true];

}

message ListenerOptions {
  // Soft limit on size of the listener's new connection read and write buffers. If unspecified, defaults to 1MiB
  // For more info, check out the [Envoy docs](https://www.envoyproxy.io/docs/envoy/v1.14.1/api-v2/api/v2/listener.proto)
  uint32 perConnectionBufferLimitBytes = 1 [
    (validate.rules).uint32 = {
      ignore_empty: true,
      gte: 1,
      lte: 512
    }
  ];
}

